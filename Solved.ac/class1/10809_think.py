"""
문제
알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.

입력
첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.

출력
각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.

만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.
만약 ba입력시 1,0,-1,-1.......
"""
#조금 생각해볼만한 문제입니다!
string=input()
buffer=[-1 for _ in range(26)]
data=list(string)
for i in data:
    res=string.find(i) #string속성 find를 이용하자 첫번째로 발견된 string에서 i문자의 위치를 반환한다
    if res==-1: #못찾으면 다음 문자를검사하자!
        continue
    else: #어떻게 buffer해당공간에 담을것인가? ->핵심
        index=ord(i)-97
        buffer[index]=res
        buffer[res]=res #코드 작동불능이유는? find위치에 res를 삽입하며안될까?
for i in buffer:
    print(i,end=' ')

#a의 아스키코드 97번지
#b의 아스키코드 98번지
#우리는 0번지애 a의 위치를담아야하고
#우리는 1번지이 b의 위치를 담아야한다
#..... 우리는 마지막번지에 문자열z의 위치르담아야한다